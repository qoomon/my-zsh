#!/usr/bin/env bash

function ip {
  local cmd=""
  if [[ $1 != -* ]]
  then
    cmd=$1    
    [[ $# > 0 ]] && shift
  fi
  
  case "$cmd" in
    ''|'external'|'ext'|'e')
      ip-external $@
      ;;
    'internal'|'int'|'i')
      ip-internal $@
      ;;
    *)
      if [ -n "$cmd" ]
      then
        echo "Unknown command '$cmd'" >&2
      fi
      echo "Usage: " >&2
      echo "   ${0##*/} int[ernal] [--interface <interface name>]" >&2
      echo "   ${0##*/} ext[ernal] [--interface <interface name>] [--details]" >&2
      
      return 1
      ;;
  esac
}

function default-interface {
  echo "$(route -n get default | grep 'interface:' | sed 's/^.*: //')"
}

function ip-internal {
  
  local interface=$(default-interface)
  local ipv4='false'
  local ipv6='false'
  
  while [[ $# > 0 ]]
  do
    local param_key="$1"
    shift

    case "$param_key" in
      '--ipv4' | '-4')
        ipv4='true'
      ;;
      '--ipv6' | '-6')
        ipv6='true'
      ;;
      '--interface'|'-i')
        interface="$1"
        shift
        ;;
      *)
        echo "Unknown parameter '$param_key'" >&2
        echo "Valid parameters:" >&2
        echo "    --interface <name>, -i <name>" >&2
        return 1
        ;;
    esac
  done
  if [ "$ipv4" != 'true' ] && [ "$ipv6" != 'true' ]
  then
      ipv4='true'
      ipv6='true'
  fi
  
  if [ "$ipv4" == 'true' ]
  then
    ipv4=$(ifconfig $(default-interface) | grep "inet "                     | awk '{print $2}')
    if [ "$ipv4" ]
    then
        echo "$ipv4"
    fi
  fi
  
  if [ "$ipv6" == 'true' ]
  then
    ipv6=$(ifconfig $(default-interface) | grep "inet6 " | grep -v "fe80::" | awk '{print $2}')
    if [ "$ipv6" ]
    then
        echo "$ipv6"
    fi
  fi
}

function ip-external {

  local ipv4='false'
  local ipv6='false'
  local interface=$(default-interface)
  local details=false

  while [[ $# > 0 ]]
  do
    local param_key="$1"
    shift

    case "$param_key" in
      '--ipv4' | '-4')
        ipv4='true'
      ;;
      '--ipv6' | '-6')
        ipv6='true'
      ;;
      '--interface'|'-i')
        interface="$1"
        shift
        ;;
      '--details'|'-d')
        details="true"
        ;;
      *)
        echo "Unknown parameter '$param_key'" >&2
        echo "Valid parameters:" >&2
        echo "    --interface <name>, -i <name>" >&2
        echo "    --details, -d" >&2
        return 1
        ;;
    esac
  done
  if [ "$ipv4" != 'true' ] && [ "$ipv6" != 'true' ]
  then
      ipv4='true'
      ipv6='true'
  fi
  
  local ipEndpoint='https://ipinfo.io/ip'
  local detailsEndpoint='https://ipinfo.io/json'
  
  if [ "$ipv4" == 'true' ]
  then
    ipv4_internal=$(ip-internal --ipv4 --interface ${interface})
    if [ "$ipv4_internal" ]
    then
      ipv4=$(curl --ipv4 --interface $interface "$ipEndpoint" -s && echo)
      if [ "$ipv4" ]
      then
        if [ "$details" != 'true' ]
        then
          echo "$ipv4"
        else
          curl --ipv4 --interface $interface "$detailsEndpoint" -s && echo
        fi
      fi
    fi
  fi
  
  if [ "$ipv6" == 'true' ]
  then
    ipv6_internal=$(ip-internal --ipv6  --interface ${interface})
    if [ "$ipv6_internal" ]
    then
      ipv6=$(curl --ipv6 --interface $interface "$ipEndpoint" -s && echo)
      if [ "$ipv6" -a "$details" == 'true' ]
      then
        if [ "$details" != 'true' ]
        then
          echo "$ipv6"
        else
          curl --ipv6 --interface $interface "$detailsEndpoint" -s && echo
        fi
      fi
    fi
  fi
}

ip "$@"
